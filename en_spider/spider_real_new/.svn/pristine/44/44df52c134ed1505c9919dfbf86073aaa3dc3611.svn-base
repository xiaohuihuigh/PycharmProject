#! /usr/bin/python
# -*- encoding:utf-8 -*-

import re
import my_utils
from base_parse import BaseParse
from lxml import etree
from items import Item


class Cnfol1(BaseParse):
    def _parse(self, raw_html):
        root = etree.HTML(raw_html)
        mainlist = root.xpath("//ul[@class='TList']/li")
        for li in mainlist:
            item = Item()
            item.set('url', "".join(li.xpath("./a/@href")))
            item.set('status', 1)
            nid_match = re.match(r".*/(\d*)/(\d*)\.shtml", item.url)
            if nid_match:
                item.set('nid', nid_match.group(1) + nid_match.group(2))
            item.set('title', "".join(li.xpath("./a/@title")))
            times = "".join(li.xpath("./span/text()"))
            item.set('timestamp', my_utils.get_timestamp(times))
            self._add_to_data(item)


class Cnfol2(BaseParse):
    """http://stock.cnfol.com/"""

    def _parse(self, raw_html):
        """时间原因，仅解析了主要内容连接，这个解析还有优化的地方"""
        root = etree.HTML(raw_html)
        lines = root.xpath("//div[@id='artList']/div[@class='artBlock ']")
        # print "lines", len(lines)
        for li in lines:
            # print "li"
            # if li.get("class") == "none":
            #     continue
            item = Item()
            url = "".join(li.xpath("./a/@href"))
            # print url
            nid_match = re.match(r".*/(\d{5,30})\.shtml", url)
            if nid_match:
                # print "match"
                nid = nid_match.group(1)
            else:
                continue
            title = "".join(li.xpath("./a/text()"))
            # abstract = "".join(li.xpath("./a/text()"))
            time_text = "".join(li.xpath("./h3/span/i/text()"))
            # print time_text
            status = 1
            item.set("nid", nid)
            item.set("title", title)
            item.set("url", url)
            item.set("status", status)
            # item.set("abstract", abstract)
            item.set('timestamp', my_utils.get_timestamp(time_text))
            self._add_to_data(item)


class Cnfol3(BaseParse):
    """http://sc.stock.cnfol.com/gushizhibo/"""

    def _parse(self, raw_html):
        root = etree.HTML(raw_html)
        lines = root.xpath("//ul[@class='TList']/li")
        # print "lines", len(lines)
        for li in lines:
            # print "li"
            item = Item()
            url = "".join(li.xpath("./a/@href"))
            nid_match = re.match(r".*/(\d{5,30})\.shtml", url)
            if nid_match:
                # print "match"
                nid = nid_match.group(1)
            else:
                continue
            title = "".join(li.xpath("./a/text()"))
            # print title
            # abstract = "".join(li.xpath("./h5/text()"))
            time_text = "".join(li.xpath("./span/text()"))
            # print time_text
            time_text = time_text[1:-1] if time_text else ""
            status = 1
            item.set("nid", nid)
            item.set("title", title)
            item.set("url", url)
            item.set("status", status)
            # item.set("abstract", abstract)
            item.set('timestamp', my_utils.get_timestamp(time_text))
            self._add_to_data(item)


